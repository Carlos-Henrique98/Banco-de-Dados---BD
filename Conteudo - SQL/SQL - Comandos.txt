==========================================
   	| SQL Server (T-SQL) |
==========================================
*SGBD(SQL STUDIO) - GERENCIA

*SQL SERVER - GUARDA (LOCAL)
------------------------------------------
DDL - Linguagem De Definicao de Dados
------------------------------------------
CREATE DATABASE - Criar um Banco
CREATE TABLE - Criar Tabelas
ALTER TABLE - Alterar Tabelas
TRUNCATE TABLE - Apagar dados da tabela
DROP TABLE - Apaga tabela

------------------------------------------
DML - Linguagem De Manipulação de Dados
------------------------------------------
INSERT - Incluir Dados
DELETE - Deleta os dados da coluna
UPDATE - Alterar dados

------------------------------------------
DQL - Linguagem De Consulta de Dados
------------------------------------------
São os comandos de consulta de dados
SELECT * FROM Table - Selecionar dados

------------------------------------------
           - SELECT DISTINCT
------------------------------------------
Algumas colunas podem conter valores duplicados.
Para exibir apenas valores diferentes ("distintos"),
use a palavra-chave DISTINCT:

SELECT DISTINCT colunas
FROM tabela

SELECT DISTINCT ID_Autor
FROM tbl_Livro


------------------------------------------
	   - CLÁUSULA WHERE
------------------------------------------
Permite filtrar registros em uma consulta

SELECT colunas FROM tabela WHERE coluna = valor

Ex.: SELECT * FROM tbl_Livro WHERE ID_Autor = '1'

SELECT ID_Autor FROM tbl_autores WHERE Sobrenome_Autor = 'Stanek'

-------------------------------------------
    	   - Operadores AND e OR
-------------------------------------------
*Usados para filtrar registros baseados em mais de 
uma condição;

*O operador AND mostra um registro se ambas as condições
forem verdadeiras;

*O operador OR mostra um registro se pelo menos uma das 
condições for verdadeira;

- Exemplo - Operadores AND e OR

 SELECT * FROM tbl_Livro
 WHERE ID_Livro > 2 AND ID_Autor < 3

 SELECT * FROM tbl_Livro
 WHERE ID_Livro > 2 OR ID_Autor < 3

---------------------------------------------
	    - Comando UPDATE
---------------------------------------------
UPDATE tabela
SET coluna = valor

UPDATE nome_tabela
SET coluna = valor
WHERE filtro 

UPDATE tbl_livros        --UPDATE nome_Tabela
SET Preco_Livro = 65.45  --SET trocar_preco da coluna Preco_Livro
wHERE ID_Livro = 102;	 --WHERE Localizar o valor 102 do ID_Livro

//Alterar mais de uma coluna
UPDATE tbl_livros
SET Preco_Livro = 80.00,
ISBN = '0202020'
WHERE ID_Livro = 101;

-----------------------------------------------
	     - SELECT TOP
-----------------------------------------------
*Usado para especificar o número de registros 
a retornar;

*Util para tabelas com muitos registros

SELECT TOP número|percentual colunas
FROM tabela

SELECT TOP 10 PERCENT Nome_Livro
FROM tbl_Livro

SELECT TOP 2 Nome_Livro
FROM tbl_Livro

------------------------------------------------
	      - SQL ALIAS
------------------------------------------------

Pode-se dar um nome diferente a uma coluna ou tabela
em uma consulta.

SELECT colunas
AS nome_alias
FROM tabela

SELECT Nome_Livro
AS Livro
FROM tbl_Livro

USE db_Biblioteca
SELECT Nome_Livro
AS Livro, ID_autor AS Autor
FROM tbl_Livro

-------------------------------------------------
	       - Operador UNION
-------------------------------------------------
  Permite combinar duas ou mais declarações SELECT.

  Cada declaração SELECT deve ter o mesmo número de 
colunas, tipos de dados e ordem das colunas

SELECT colunas FROM tabela1
UNION
SELECT colunas FROM tabela2

SELECT ID_Autor FROM tbl_autores UNION
SELECT ID_Autor FROM tbl_Livro

SELECT ID_Autor FROM tbl_autores
UNION ALL
SELECT ID_Autor FROM tbl_livro

--------------------------------------------------
		- SELECT INTO
--------------------------------------------------
 Seleciona dados de uma ou mais tabelas e os insere em
uma tabela diferente.

Pode ser usada para criar cópias de backup de tabelas

SELECT *
INT nova_tabela
FROM tabela_atual

SELECT Nome_Livro,ID_Autor
INTO LivroAutor
FROM tbl_Livro
WHERE ID_Livro > 2

----------------------------------------------------
		- Funções Agregadas
----------------------------------------------------

MIN - Valor Minimo
MAX - Valor Maximo
AVG - Media Aritmetica
SUM - Total (Soma)
COUNT - Contar quantidade de item

Exemplo:

SELECT COUNT(*) FROM tbl_autores

SELECT MAX (Preco_Livro) FROM tbl_Livro

SELECT MIN (Preco_Livro) FROM tbl_Livro

SELECT SUM (Preco_Livro) FROM tbl_Livro

-----------------------------------------------------
	    - BETWEEN - SELECAO DE INTERVALO
-----------------------------------------------------

SELECT colunas FROM tabela
WHERE coluna BETWEEN valor1 AND valor2

SELECT * FROM tbl_Livro
WHERE Data_Pub BETWEEN '20040517' AND '20100517'

SELECT Nome_Livro AS Livro, Preco_Livro AS Preco
FROM tbl_Livro
WHERE Preco_Livro BETWEEN 40.00 AND 60.00

----------------------------------------------------
		LIKE E NOT LIKE
----------------------------------------------------
*Determina se uma cadeia de caracteres especifica corresponde
a uma padrao especificado. Um padrao pode incluir caracteres
normais e curingas

*NOT LIKE inverte a comparação, verificando se a cadeia 
de caracteres NAO corresponde ao padrão especificado.

Usando junto com WHERE

Ex.:

WHERE coluna LIKE padrao

 LIKE - Padrões especificos

'%' - Qualquer cadeia de 0 ou mais caracteres

'_' - Sublinhado: qualquer caracter único

'[]' - Qualquer caracter único no intervalo ou conjunto
especificado ([a-h];[aeiou])

'[^]' - Qualquer caracter único que não esteja no intervalo
ou conjunto especificado ([a-h]; [aeiou])

-------------------------------------------------------
		       - JOINS
-------------------------------------------------------
A palavra-chave JOIN é usada para obter dados provenientes
de duas ou mais tabelas, baseado em um relacionamento entre 
colunas nestas tabelas.

 * INNER JOIN: Retorna linhas quando houver pelo menos uma
correspondencia em ambas as tabelas.

 * OUTER JOIN: Retorna linhas mesmo quando não houver pelo
menos uma correspondência em uma das tabelas (ou ambas). O
OUTER JOIN divide em LEFT JOIN, RIGHT JOIN e FULL JOIN.

SELECT colunas
FROM tabela1
INNER JOIN tabela2
ON tabela1.coluna = tabela2.coluna

Ex.:
SELECT * FROM tbl_Livro
INNER JOIN tbl_autores
ON tbl_Livro.ID_Autor = tbl_autores.ID_Autor

SELECT tbl_Livro.Nome_Livro,tbl_Livro.ISBN,
tbl_autores.Nome_Autor
FROM tbl_Livro
INNER JOIN tbl_autores
ON tbl_Livro.ID_Autor = tbl_autores.ID_Autor

Usando Aliases:
SELECT L.Nome_Livro, E.Nome_editora
FROM tbl_Livro AS L
INNER JOIN tbl_editoras AS E
ON L.ID_editora = E.ID_editora